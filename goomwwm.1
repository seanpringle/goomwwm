.TH GOOMWWM 1 "" 
.SH NAME
.PP
goomwwm - Get out of my way, Window Manager!
.SH SYNOPSIS
.PP
\f[B]goomwwm\f[] [ options ]
.SH DESCRIPTION
.PP
\f[B]goomwwm\f[] is an X11 window manager implemented in C as a
cleanroom software project.
It manages windows in a minimal floating layout with normal mouse
controls, while also providing flexible keyboard-driven controls for
window switching, sizing, moving, tagging, and tiling.
It is fast, lightweight, modeless, Xinerama-aware, and EWMH compatible
wherever possible.
.PP
Keyboard window movement occurs on a 3x3 fullscreen grid.
For example, a top-left aligned window moved to the right would reappear
top-center, and if moved again, top-right.
.PP
Keyboard window sizing moves windows through four basic sizes that tile
well: 1/9th of screen (1/3 width, 1/3 height), 1/4th, 4/9th, and
fullscreen.
Combined with EWMH horizontal and vertical maxmimization, plus some
snap-to-edge and expand-to-fill-space controls, manual tiling is easy.
.PP
Windows are grouped by tags.
Activating a tag raises all windows in the tag.
A window may have multiple tags.
EWMH panels, pagers, and taskbars see tags as desktops.
.PP
License: MIT/X11
.SH USAGE
.PP
See options below for custom key combinations.
These are the defaults.
.PP
Below, \f[B]Mod\f[] refers to the global modifier key which is
\f[B]Mod4\f[] by default.
Usually Mod4 is mapped to the left Windows key.
To change it, see \f[B]-modkey\f[].
.TP
.B Mod-Button1
(Mouse!) Move a window.
.RS
.RE
.TP
.B Mod-Button3
(Mouse!) Resize a window.
.RS
.RE
.TP
.B Mod-[F1-F9]
Set the current tag and raise all its windows.
A window may be in multiple tags.
For EWMH panel and pager integration tags roughly simulate desktops
(always 9), but there will be differences in behavior.
.RS
.RE
.TP
.B Mod-Shift-[F1-F9]
Toggle active window\[aq]s tags without switching current tag.
.RS
.RE
.TP
.B Mod-[1-9]
Do a case-insensitive keyword search for window by WM_CLASS and title.
If found, raise and focus.
If not found, try to execute the keyword and start the app.
See \f[B]-1\f[] through \f[B]-9\f[] args.
.RS
.RE
.TP
.B Mod-Shift-[1-9]
Force execution of keyword used in \f[B]Mod-[1-9]\f[] even if a copy of
the window already exists.
.RS
.RE
.TP
.B Mod-Tab
Switch between all windows by popup menu.
This is partly based on \f[B]dmenu\f[] but more tightly integrated with
the window manager and centered on screen.
Type text to filter the menu entries.
Navigate with the arrow keys.
Return to select.
.RS
.RE
.TP
.B Mod-` (Grave/Backtick)
Switch between all windows in current tag by popup menu.
.RS
.RE
.TP
.B Mod-c
Cycle through windows in the same tag and position as the active window.
.RS
.RE
.TP
.B Mod-Escape
Close the active window.
.RS
.RE
.TP
.B Mod-PageUp
Grow the active window through four basic sizes that tile well together:
1/9th, 1/4th, 4/9th, or fullscreen.
.RS
.RE
.TP
.B Mod-PageDown
Shrink the active window through the same four sizes.
.RS
.RE
.TP
.B Mod-Shift-PageUp
Increase size of the active window.
.RS
.RE
.TP
.B Mod-Shift-PageDown
Decrease size of the active window.
.RS
.RE
.TP
.B Mod-h
Horizontally tile the active window and others with the same tag,
position, and size.
.RS
.RE
.TP
.B Mod-v
Vertically tile the active window and others with the same tag,
position, and size.
.RS
.RE
.TP
.B Mod-Shift-h
Opposite of Mod-h.
Horizontally un-tile.
.RS
.RE
.TP
.B Mod-Shift-v
Opposite of Mod-v.
Vertically un-tile.
.RS
.RE
.TP
.B Mod-x
Run the launcher (by default: dmenu_run).
.RS
.RE
.TP
.B Mod-a
Toggle _NET_WM_STATE_ABOVE for the active window.
Corners will flash to acknowledge.
.RS
.RE
.TP
.B Mod-b
Toggle _NET_WM_STATE_BELOW for the active window.
Corners will flash to acknowledge.
.RS
.RE
.TP
.B Mod-f
Toggle _NET_WM_STATE_FULLSCREEN for the active window.
Corners will flash to acknowledge.
.RS
.RE
.TP
.B Mod-d
Resize active window to match the window immediately underneath, in the
same tag.
.RS
.RE
.TP
.B Mod-Home
Toggle _NET_WM_STATE_MAXIMIXED_HORZ for the active window.
Corners will flash to acknowledge.
.RS
.RE
.TP
.B Mod-End
Toggle _NET_WM_STATE_MAXIMIXED_VERT for the active window.
Corners will flash to acknowledge.
.RS
.RE
.TP
.B Mod-Return
Expand active window to fill surrounding space without obscuring any
fully visible window.
.RS
.RE
.TP
.B Mod-Backspace
Contract active window to fill an underlying space without obscuring
window that would then be fully visible.
.RS
.RE
.TP
.B Mod-Insert
Toggle vertical move/resize lock for the active window.
.RS
.RE
.TP
.B Mod-Delete
Toggle horizontal move/resize lock for the active window.
.RS
.RE
.TP
.B Mod-Left
Move the active window left within a 3x3 grid.
.RS
.RE
.TP
.B Mod-Right
Move the active window right within a 3x3 grid.
.RS
.RE
.TP
.B Mod-Up
Move the active window up within a 3x3 grid.
.RS
.RE
.TP
.B Mod-Down
Move the active window down within a 3x3 grid.
.RS
.RE
.TP
.B Mod-Shift-Left (Left/Right/Up/Down)
Snap the active window to the nearest border, by direction.
.RS
.RE
.TP
.B Mod-u
Undo the last size/position change for the active window.
Undo is 10 levels deep.
.RS
.RE
.TP
.B Mod-i
Switch focus upward from the active window.
.RS
.RE
.TP
.B Mod-j
Switch focus to the left of the active window.
.RS
.RE
.TP
.B Mod-k
Switch focus downward from the active window.
.RS
.RE
.TP
.B Mod-l
Switch focus to the right of the active window.
.RS
.RE
.TP
.B Mod-Shift-i (i/j/k/l)
Swap the active window position with another window by direction.
.RS
.RE
.TP
.B Mod-t
Toggle the active window\[aq]s membership of the current tag.
.RS
.RE
.TP
.B Mod-m
Cycle tag forward.
.RS
.RE
.TP
.B Mod-n
Cycle tag backward.
.RS
.RE
.TP
.B Mod-w
Display active window title.
.RS
.RE
.TP
.B Mod-, (comma)
Reapply active window rule.
.RS
.RE
.TP
.B Mod-. (period)
Switch between defined rule sets.
.RS
.RE
.TP
.B Mod-/ (slash)
Minimize a window.
.RS
.RE
.TP
.B Mod-[ (left square brancket)
Move and resize a window to cover the left 2/3 of a monitor.
.RS
.RE
.TP
.B Mod-] (right square brancket)
Move and resize a window to cover the right 2/3 of a monitor.
.RS
.RE
.TP
.B Mod-o
Show only windows in the current tag.
Hide everything else.
.RS
.RE
.TP
.B Mod-Pause (press twice)
Quit goomwwm.
.RS
.RE
.SH OPTIONS
.PP
All key combinations use the same global modifier key by default, which
is \f[B]Mod4\f[] (usually Win/Meta).
If the default modifier is changed with \f[B]-modkey\f[] then all key
combinations that do not specify their own custom modifiers will change
to use the new modifier automatically.
.PP
All options below that set a custom key therefore implicitly combine it
with the default modifier key.
For example, the following both mean \f[B]Mod4-a\f[]:
.IP
.nf
\f[C]
goomwwm\ -above\ a
goomwwm\ -above\ mod4-a
\f[]
.fi
.PP
Any combiation of \f[B]shift\f[], \f[B]control\f[], \f[B]mod1\f[]
(usually Alt), \f[B]mod2\f[], \f[B]mod3\f[], \f[B]mod4\f[] (usually
Win/Meta), \f[B]mod5\f[] (sometimes AltGr) may be supplied for any key
combination:
.IP
.nf
\f[C]
goomwwm\ -above\ control-shift-a
\f[]
.fi
.PP
To explicitly bind a key without any modifier, not even the default, use
\f[B]nomod\f[]:
.IP
.nf
\f[C]
goomwwm\ -above\ nomod-f12
\f[]
.fi
.PP
Note that this would capture F12 globally, making it unusable for
anything else.
Use \f[I]nomod\f[] with care.
.TP
.B -1 -2 -3 -4 -5 -6 -7 -8 -9
Set a number key to a keyword to search for a window by WM_CLASS,
application name, or title, and then raise and focus it.
If a window is not found, the string supplied will be executed as a
shell command to start the application.
.RS
.PP
goomwwm -1 chromium -2 firefox -3 xterm
.PP
Above, Mod-1 would match the top-most Chromium window.
.PP
Many applications politely set their WM_CLASS to a sane value (eg,
Chromium uses Chromium, xterm uses XTerm) or append their name to their
window titles, which nicely matches their binary names if we use
case-insensitive string comparison.
This allows us to use the one string to both search and start.
.PP
Applications that are not so friendly can sometimes be wrapped in a
shell script of the appropriate name in your $PATH somewhere.
.PP
Sometimes it can be useful to limit the match to WM_CLASS or name (eg,
when a browser window title includes another app\[aq]s name causing a
false positive).
Simply use \f[B]class:\f[] or \f[B]name:\f[] prefixes:
.PP
goomwwm -1 class:chromium
.RE
.TP
.B -above
Set an X11 key name to toggle _NET_WM_STATE_ABOVE for the active window
(default: XK_a).
.RS
.PP
goomwwm -above a
.RE
.TP
.B -appkeys
Specify the keys to use for app search-or-launch as set by \f[B]-1\f[]
through \f[B]-9\f[] (default: numbers).
.RS
.PP
Valid settings are:
.TP
.B numbers
Use the number keys 1-9
.RS
.RE
.TP
.B functions
Use the function keys F1-F9
.RS
.RE
.PP
If function keys are used for app launchers the number keys will be used
to swap tags, and vice versa.
.RE
.TP
.B -attention
Set the border color (X11 named color or hex #rrggbb) for an inactive
window with _NET_WM_STATE_DEMANDS_ATTENTION (default: Red).
.RS
.PP
goomwwm -attention Red
.RE
.TP
.B -auto
Search for an app at startup and autostart it if not found.
Uses the same WM_CLASS/name/title matching rules as the -1 through -9
arguments (default: none).
.RS
.PP
goomwwm -auto chromium
.PP
Above, chromium will only be started if a chromium window does not
already exist.
.RE
.TP
.B -below
Set an X11 key name to toggle _NET_WM_STATE_BELOW for the active window
(default: XK_b).
.RS
.PP
goomwwm -below b
.RE
.TP
.B -blur
Set the border color (X11 named color or hex #rrggbb) for unfocused
windows (default: Dark Gray).
.RS
.PP
goomwwm -blur "Dark Gray"
.RE
.TP
.B -border
Set the border width in pixels for all managed windows (default: 2).
.RS
.PP
goomwwm -border 2
.RE
.TP
.B -close
Set an X11 key name to gracefully close the active window (default:
XK_Escape).
.RS
.PP
goomwwm -close Escape
.RE
.TP
.B -config
Parse extra options from a text file.
.RS
.PP
goomwwm -config /path/to/config.txt
.PP
The file format is any command line options without the leading hyphen.
Comments and blank lines are acceptable.
.IP
.nf
\f[C]
#\ a\ comment
2\ chromium
2\ konsole
close\ Escape
menufont\ mono-14
\f[]
.fi
.PP
If a config file is found at \f[B]$XDG_CONFIG_HOME/goomwwm/goomwwmrc\f[]
or \f[B]$HOME/.config/goomwwm/goomwwmrc\f[] or
\f[B]$HOME/.goomwwmrc\f[], the first one found will be automatically
parsed.
.RE
.TP
.B -cycle
Set an X11 key name to cycle windows in the same tag and position as the
active window (default: XK_c).
.RS
.PP
goomwwm -cycle c
.RE
.TP
.B -contract
Set an X11 key name to contract the active window to fill an underlying
space without obscuring any other window in the current tag that would
then be fully visible (default: XK_Contract).
Opposite of -expand.
.RS
.PP
goomwwm -contract BackSpace
.RE
.TP
.B -decrease
Set an X11 key to decrementally resize the active window (default:
shift+page_up).
.RS
.PP
goomwwm -decrease shift+page_down
.RE
.TP
.B -down
Set an X11 key name to move the active window downward in a 3x3 grid
(default: XK_Down).
.RS
.PP
goomwwm -down Down
.RE
.TP
.B -duplicate
Set an X11 key name to resize the active window to match the window
immediately underneath, in the same tag (default: XK_d).
.RS
.PP
goomwwm -duplicate d
.RE
.TP
.B -exec
Execute a command at startup but only after goomwwm has started
successfully (default: none).
Useful for pre-lanching apps, but also see \f[B]-auto\f[].
.RS
.PP
goomwwm -exec firefox
.RE
.TP
.B -expand
Set an X11 key name to expand the active window to fill adjacent space
without obscuring any other fully visible window in the current tag
(default: XK_Return).
Opposite of -contract.
.RS
.PP
goomwwm -expand Return
.RE
.TP
.B -largeleft
Set an X11 key to move and resize the active window to cover the left
2/3 of a monitor (default: XK_bracketleft).
.RS
.PP
goomwwm -largeleft bracketleft
.RE
.TP
.B -largeright
Set an X11 key to move and resize the active window to cover the right
2/3 of a monitor (default: XK_bracketright).
.RS
.PP
goomwwm -largeleft bracketleft
.RE
.TP
.B -launch
Set an X11 key to run the application launcher (default: XK_x).
.RS
.PP
goomwwm -launch x
.RE
.TP
.B -launcher
Set a custom application launcher to execute on \f[B]Mod-x\f[] (default:
dmenu_run).
.RS
.PP
goomwwm -launcher dmenu_run
.RE
.TP
.B -flashms
Set the duration in milliseconds of the window flash indicators
(default: 500).
.RS
.PP
goomwwm -flashms 500
.RE
.TP
.B -flashon
Set the color (X11 named color or hex #rrggbb) of the flash indicator
when toggling \f[I]NET_WM_STATE\f[]* on (default: Dark Green).
.RS
.PP
goomwwm -flashon "Dark Green"
.RE
.TP
.B -flashoff
Set the color (X11 named color or hex #rrggbb) of the flash indicator
when toggling \f[I]NET_WM_STATE\f[]* off (default: Dark Red).
.RS
.PP
goomwwm -flashon "Dark Red"
.RE
.TP
.B -flashpx
Set the size in pixels of window flash indicators (currently a colored
square in each window corner) (default: 10).
.RS
.PP
goomwwm -flashpx 10
.RE
.TP
.B -flashtitle
Wether to flash a window\[aq]s title when changing focus or other modes
(default: hide).
Regardless of this setting, \f[B]Mod-w\f[] always displays a
window\[aq]s title.
.RS
.PP
goomwwm -flashtitle hide
.PP
Valid modes:
.TP
.B show
Flash title bar centered on the window.
.RS
.RE
.TP
.B hide
Do no flash title bar.
.RS
.RE
.RE
.TP
.B -focus
Set the border color (X11 named color or hex #rrggbb) for the focused
window (default: Royal Blue).
.RS
.PP
goomwwm -focus "Royal Blue"
.RE
.TP
.B -focusdown
Set an X11 key name to switch focus downward from the active window
within the current tag (default: XK_k).
.RS
.PP
goomwwm -focusdown k
.RE
.TP
.B -focusleft
Set an X11 key name to switch focus to left of the active window within
the current tag (default: XK_j).
.RS
.PP
goomwwm -focusleft j
.RE
.TP
.B -focusmode
Control the window focus mode (default: click).
.RS
.PP
goomwwm -focusmode click
.PP
Valid settings are:
.TP
.B click
focus on mouse click.
.RS
.RE
.TP
.B sloppy
focus follows mouse
.RS
.RE
.TP
.B sloppytag
focus follows mouse within current tag.
.RS
.RE
.RE
.TP
.B -focusright
Set an X11 key name to switch focus to right of the active window within
the current tag (default: XK_l).
.RS
.PP
goomwwm -focusright l
.RE
.TP
.B -focusup
Set an X11 key name to switch focus upward form the active window within
the current tag (default: XK_i).
.RS
.PP
goomwwm -focusup i
.RE
.TP
.B -fullscreen
Set an X11 key name to toggle _NET_WM_STATE_FULLSCREEN for the active
window (default: XK_f).
.RS
.PP
goomwwm -fullscreen f
.RE
.TP
.B -grow
Set an X11 key name to increase the active window size (default:
XK_Page_Up) through four basic sizes that tile well together: 1/9th,
1/4th, 4/9th, or fullscreen.
.RS
.PP
goomwwm -grow Page_Up
.RE
.TP
.B -hlock
Set an X11 key name to toggle horizontal move/resize lock for the active
window (default: XK_Delete).
.RS
.PP
goomwwm -hlock Delete
.RE
.TP
.B -hmax
Set an X11 key name to toggle _NET_WM_STATE_MAXIMIXED_HORZ for the
active window (default: XK_End).
.RS
.PP
goomwwm -hmax End
.RE
.TP
.B -htile
Set an X11 key to horizontally tile the active window and others with
the same tag, position, and size (default: XK_h).
.RS
.PP
goomwwm -htile h
.RE
.TP
.B -huntile
Set an X11 key to do the opposite of -htile.
.RS
.PP
goomwwm -huntile h
.RE
.TP
.B -info
Set an X11 key to briefly display the active window\[aq]s title
(default: XK_w).
.RS
.PP
goomwwm -info w
.RE
.TP
.B -increase
Set an X11 key to incrementally resize the active window (default:
shift+page_up).
.RS
.PP
goomwwm -increase shift+page_up
.RE
.TP
.B -left
Set an X11 key name to move the active window to the left in a 3x3 grid
(default: XK_Left).
.RS
.PP
goomwwm -left Left
.RE
.TP
.B -mapmode
Control the window initial map focus mode (default: steal).
.RS
.PP
goomwwm -mapmode steal
.PP
Valid settings are:
.TP
.B steal
new windows get focus.
.RS
.RE
.TP
.B block
new windows do not get focus.
.RS
.RE
.RE
.TP
.B -menubc
Set the border color (X11 named color or hex #rrggbb) for the
window-switcher menu (default: #c0c0c0).
.RS
.PP
goomwwm -menubc "#c0c0c0"
.RE
.TP
.B -menubg
Set the background text color (X11 named color or hex #rrggbb) for the
window-switcher menu (default: #f2f1f0).
.RS
.PP
goomwwm -menubg "#f2f1f0"
.RE
.TP
.B -menubgalt
Set the alternate background text color (X11 named color or hex #rrggbb)
for the window-switcher menu (default: #e9e8e7).
.RS
.PP
goomwwm -menubgalt "#e9e8e7"
.RE
.TP
.B -menufg
Set the foreground text color (X11 named color or hex #rrggbb) for the
window-switcher menu (default: #222222).
.RS
.PP
goomwwm -menufg "#222222"
.RE
.TP
.B -menufont
Xft font name for use by the window-switcher menu (default: mono-14).
.RS
.PP
goomwwm -menufont monospace-14:medium
.RE
.TP
.B -menuhlbg
Set the background text color (X11 named color or hex #rrggbb) for the
highlighted item in the window-switcher menu (default: #005577).
.RS
.PP
goomwwm -menufg "#005577"
.RE
.TP
.B -menuhlfg
Set the foreground text color (X11 named color or hex #rrggbb) for the
highlighted item in the window-switcher menu (default: #ffffff).
.RS
.PP
goomwwm -menufg "#ffffff"
.RE
.TP
.B -menulines
Maximum number of entries the window-switcher menu may show before
scrolling (default: 25).
.RS
.PP
goomwwm -menulines 25
.RE
.TP
.B -menuselect
Control how menu items are selected (default: return).
.RS
.PP
goomwwm -menuselect return
.PP
Valid settings are:
.TP
.B return
Menu stays open until item is selected with Enter/Return key.
This is dmenu-like.
.RS
.RE
.TP
.B modkeyup
Menu stays open until item is selected by releasing the modkey.
This is classic Alt-Tab window switching behavior.
.RS
.RE
.RE
.TP
.B -menuwidth
Set the width of the window-switcher menu as a percentage of the screen
width if <= 100 (% symbol optional), or in pixels if >100 (default:
60%).
.RS
.PP
goomwwm -menuwidth 60% goomwwm -menuwidth 800
.RE
.TP
.B -minimize
Set an X11 key name to minimize a window (default: XK_slash).
.RS
.PP
goomwwm -minimize slash
.RE
.TP
.B -modkey
Change the modifier key mask to any combination of:
control,mod1,mod2,mod3,mod4,mod5 (default: mod4).
.RS
.PP
goomwwm -modkey control,mod1
.RE
.TP
.B -only
Set an X11 key name to show only windows in the current tag, hiding
everything else (default: XK_o).
.RS
.PP
goomwwm -only o
.RE
.TP
.B -onlyauto
Make \f[B]-only\f[] behavior automatic after current tag switch.
Note that while this setting makes tags behave pretty much like virtual
desktops, it also reduces flexibility.
.RS
.PP
goomwwm -onlyauto
.RE
.TP
.B -placement
Control the position of new windows (default: any).
.RS
.PP
goomwwm -placement any
.PP
Valid settings are:
.TP
.B any
Windows that specify or remember their placement are honored.
Everything else is centered on the current monitor.
.RS
.RE
.TP
.B center
Windows are centered on the current monitor.
.RS
.RE
.TP
.B pointer
Windows are centered under the mouse pointer.
.RS
.RE
.RE
.TP
.B -prefix
Set an X11 key name to act as a modal key combination that replaces the
default modifier key for all other combinations (default: none).
This is similar to the way key combinations work in \f[B]ratpoison\f[]
and GNU \f[B]screen\f[].
.RS
.PP
goomwwm -prefix z
.PP
Above, \f[B]Mod-z\f[] would now need to preceed all other keys.
For example, cycling windows would become preass and relases
\f[B]Mod-z\f[] then press \f[B]c\f[].
.PP
Of course, \f[B]-prefix\f[] can also be combined with \f[B]-modkey\f[]:
.PP
goomwwm -modkey control -prefix z
.PP
Cycling windows would then become \f[B]Control-z\f[] then \f[B]c\f[].
.PP
Finally, if you press the prefix key combination by mistake, press the
prefix key again to cancel.
.RE
.TP
.B -quit
Set an X11 key name to exit the window manager (default: XK_Pause).
This key must be \f[B]pressed twice\f[] to take effect!
.RS
.PP
goomwwm -quit Pause
.RE
.TP
.B -raisemode
Control the window raise mode (default: focus).
.RS
.PP
goomwwm -raisemode focus
.PP
Valid settings are:
.TP
.B focus
Window is raised on focus (default for -focusmode click).
.RS
.RE
.TP
.B click
Window is raised on Mod-AnyButton click (default for -focusmode
sloppy[tag]).
.RS
.RE
.RE
.TP
.B -resizehints
How to handle windows that specify resize-increment hints (Default:
smart).
These are what can sometimes cause tiled terminals to have gaps around
the edges.
.RS
.PP
goomwwm -resizehints smart
.PP
Valid settings are:
.TP
.B all
All window hints are respected.
.RS
.RE
.TP
.B none
No window hints are respected.
Note that this does not prevent windows from sending a follow-up request
to be resized to respect their hints.
gnome-terminal and lxterminal both do this and may always show gaps.
.RS
.RE
.TP
.B smart
Most window hints are respected, except for a few apps we know can
handle having their hints ignored.
At present, this is \f[B]xterm\f[] and \f[B]urxvt\f[].
.RS
.RE
.TP
.B (posix regex)
Implies smart mode.
A regular expression to match the WM_CLASS of windows to ignore
\f[B]smart\f[] mode.
By default this is "^(xterm|urxvt)$".
Regex is case-insensitive using POSIX extended syntax.
.RS
.RE
.RE
.TP
.B -right
Set an X11 key name to move the active window to the right in a 3x3 grid
(default: XK_Right).
.RS
.PP
goomwwm -right Right
.RE
.TP
.B -rule
Define a global window control rule (default: none).
This argument can be specified multiple times to define multiple rules.
If a window matches multiple rules only the \f[I]last\f[] rule specified
is used.
.RS
.IP
.nf
\f[C]
goomwwm\ -rule\ "firefox\ tag9"
goomwwm\ -rule\ "xfce4-notifyd\ ignore"
goomwwm\ -rule\ "xterm\ left,maximize_vert,medium"
\f[]
.fi
.PP
Rules always have the format:
.IP
.nf
\f[C]
pattern\ flag[...,flagN]
\f[]
.fi
.PP
The \f[B]pattern\f[] is a case-insensitive POSIX regular expression
matched against a window\[aq]s WM_CLASS, application name, or title
fields (in that order).
Alternatively, the pattern can be limited to one field by using
\f[B]class:\f[], \f[B]name:\f[], or \f[B]title:\f[] pattern prefixes
(this is also faster):
.IP
.nf
\f[C]
goomwwm\ -rule\ "class:firefox\ tag9"
goomwwm\ -rule\ "name:xfce4-notifyd\ ignore"
goomwwm\ -rule\ "title:xterm\ left,maximize_vert,medium"
\f[]
.fi
.PP
Valid \f[B]flags\f[] are:
.TP
.B ignore
Do not manage a window.
Effectively makes a window behave as it the override_redirect flag is
set.
.RS
.RE
.TP
.B steal block
Allow or prevent a new widow taking focus.
.RS
.RE
.TP
.B reset
Remove all EWMH states and H/V locks (useful for -ruleset).
.RS
.RE
.TP
.B once
Allow a rule to execute only once (useful for -ruleset).
.RS
.RE
.TP
.B minimize restore
Start window pre-minimzed, or restore a window on rule set switch.
.RS
.RE
.TP
.B minimize_auto
Automatically minimize a window when it loses focus.
.RS
.RE
.TP
.B tag1 tag2 tag3 tag4 tag5 tag6 tag7 tag8 tag9
Apply tags to a window when it first opens.
If the current tag is not in the list the window will not be raised or
allowed to take focus.
.RS
.RE
.TP
.B monitor1 monitor2 monitor3
Place the window on a specific monitor.
These are numbered based on what Xinerama thinks the monitor order
should be (ie, usually the same screen numbers as defined in xorg.conf).
.RS
.RE
.TP
.B above below fullscreen maximize_horz maximize_vert sticky
skip_taskbar skip_pager
Apply respective \f[I]NET_WM_STATE\f[]* to a window.
.RS
.RE
.TP
.B raise lower
Pre-raise or lower a window in the stacking order.
These only take effect for a blocked window.
For unblocked windows that take focus, -raisemode takes precedence.
.RS
.RE
.TP
.B left right top bottom
Align a window with a screen edge.
May be combined.
Top trumps bottom.
Left trumps right.
.RS
.RE
.TP
.B center pointer
Place a window center-screen or centered under the mouse pointer.
.RS
.RE
.TP
.B small medium large cover expand contract
Set a window\[aq]s initial size (same increments as PageUp/Down).
May be combined.
.RS
.RE
.TP
.B hlock vlock
Lock window horizontally or vertically.
.RS
.RE
.TP
.B htile huntile vtile vuntile
Tile or untile a window with its fellows.
.RS
.RE
.TP
.B snap_left snap_right snap_up snap_down
Immediately snap a window to another\[aq]s edge.
.RS
.RE
.TP
.B replace
Place a window in the same position as the active window.
.RS
.RE
.TP
.B duplicate
Size a window to match the one beneath it.
.RS
.RE
.TP
.B NxN N%xN%
Apply a specific size in pixels or percent of monitor size.
.RS
.RE
.PP
Rules are not currently applied to transient windows (dialogs).
.RE
.TP
.B -ruleset
Define a group of rules to execute on all windows in the current tag
when selected by menu (default: none).
See \f[B]-runruleset\f[].
.RS
.PP
goomwwm -ruleset Name -rule ...
-rule ...
-ruleset Name2 -rule ...
.PP
Or, in a config file:
.IP
.nf
\f[C]
ruleset\ Development\ Layout
rule\ class:xterm\ right,bottom,small
rule\ class:gvim\ left,maximize_vert,large

ruleset\ Email/Chat\ Distractions
rule\ class:pidgin\ left,bottom,small,snap_right
rule\ class:chromium\ top,maximize_horz,large
\f[]
.fi
.PP
All \f[B]-ruleset\f[] definitions need to come after the global
\f[B]-rule\f[] definitions on the command line, or in a config file.
.PP
Where global rules are autonomous and their order is not important,
rulesets are more like mini scripts where rules are commands executed in
order.
Windows may therefore be affected by multiple rules in a ruleset.
Use precise regex patterns to be safe.
.RE
.TP
.B -runrule
Set an X11 key name to reapply any rule relevant to the active window
(default: XK_comma).
.RS
.PP
goomwwm -runrule comma
.RE
.TP
.B -runruleset
Set an X11 key name to execute defined rule sets using a menu (default:
XK_period).
.RS
.PP
goomwwm -runrule period
.RE
.TP
.B -shrink
Set an X11 key name to decrease the active window size (default:
XK_Page_Down) through four basic sizes that tile well together: 1/9th,
1/4th, 4/9th, or fullscreen.
.RS
.PP
goomwwm -shrink Page_Down
.RE
.TP
.B -snapdown
Set an X11 key name to snap the active window downward to the nearest
border.
.RS
.PP
goomwwm -snapdown Shift+Down
.RE
.TP
.B -snapleft
Set an X11 key name to snap the active window left to the nearest
border.
.RS
.PP
goomwwm -snapleft Shift+Left
.RE
.TP
.B -snapright
Set an X11 key name to snap the active window right to the nearest
border.
.RS
.PP
goomwwm -snapright Shift+Right
.RE
.TP
.B -snapup
Set an X11 key name to snap the active window upward to the nearest
border.
.RS
.PP
goomwwm -snapup Shift+Up
.RE
.TP
.B -swapdown
Set an X11 key name to swap the active window with one below.
.RS
.PP
goomwwm -swapdown Shift+Down
.RE
.TP
.B -swapleft
Set an X11 key name to swap the active window with one to the left.
.RS
.PP
goomwwm -swapleft Shift+Left
.RE
.TP
.B -swapright
Set an X11 key name to swap the active window with one to the right.
.RS
.PP
goomwwm -swapright Shift+Right
.RE
.TP
.B -swapup
Set an X11 key name to swap the active window with one above.
.RS
.PP
goomwwm -swapup Shift+Up
.RE
.TP
.B -switch
Set an X11 key to start display window-switcher showing all open windows
(default: XK_Tab).
.RS
.PP
goomwwm -switch Tab
.RE
.TP
.B -switcher
Command to run an alternate window-switcher (default: built-in menu).
.RS
.PP
goomwwm -switcher dswitch
.RE
.TP
.B -tag
Set an X11 key to toggle the active window\[aq]s membership of the
current tag (default: XK_t).
.RS
.PP
goomwwm -tag t
.RE
.TP
.B -tswitch
Set an X11 key to start display window-switcher showing only windows in
the current tag (default: XK_grave).
.RS
.PP
goomwwm -tswitch grave
.RE
.TP
.B -tagnext
Set an X11 key to cycle tags forward (default: XK_m).
.RS
.PP
goomwwm -tagnext m
.RE
.TP
.B -tagprev
Set an X11 key to cycle tags in reverse (default: XK_n).
.RS
.PP
goomwwm -tagprev n
.RE
.TP
.B -titlebc
Set the border color (X11 named color or hex #rrggbb) for window titles
(default: #c0c0c0).
.RS
.PP
goomwwm -titlebc "#c0c0c0"
.RE
.TP
.B -titlebg
Set the background text color (X11 named color or hex #rrggbb) for
window titles (default: #f2f1f0).
.RS
.PP
goomwwm -titlebg "#f2f1f0"
.RE
.TP
.B -titlefg
Set the foreground text color (X11 named color or hex #rrggbb) for
window titles (default: #222222).
.RS
.PP
goomwwm -titlefg "#222222"
.RE
.TP
.B -titlefont
Xft font name for use by window popup titles (default: sans-14).
.RS
.PP
goomwwm -titlefont sans-14:medium
.RE
.TP
.B -titlebar
Height in pixels of a window title bar or on/off (default: off).
.RS
.PP
goomwwm -titlebar 18 goomwwm -titlebar on goomwwm -titlebar off
.PP
The \f[B]on\f[] argument will auto-calculate titlebar height based on
\f[B]-titlebarfont\f[].
.RE
.TP
.B -titlebarfont
Xft font name for use by window title bars (default: sans-10).
.RS
.PP
goomwwm -titlebarfont sans-10:medium
.RE
.TP
.B -titlebarfocus
Set the text color of focused-window title bars (X11 named color or hex
#rrggbb).
.RS
.PP
goomwwm -titlebarfocus "#eeeeee"
.RE
.TP
.B -titlebarblur
Set the text color of unfocused-window title bars (X11 named color or
hex #rrggbb).
.RS
.PP
goomwwm -titlebarblur "#eeeeee"
.RE
.TP
.B -up
Set an X11 key name to move the active window upward in a 3x3 grid
(default: XK_Up).
.RS
.PP
goomwwm -up Up
.RE
.TP
.B -undo
Set an X11 key to undo the last size/position change for the active
window (default: XK_u).
Undo is 10 levels deep.
.RS
.PP
goomwwm -undo u
.RE
.TP
.B -vlock
Set an X11 key name to toggle vertical move/resize lock for the active
window (default: XK_Insert).
.RS
.PP
goomwwm -vlock Insert
.RE
.TP
.B -vmax
Set an X11 key name to toggle _NET_WM_STATE_MAXIMIXED_VERT for the
active window (default: XK_Home).
.RS
.PP
goomwwm -vmax Home
.RE
.TP
.B -vtile
Set an X11 key to vertically tile the active window and other windows
with the same tag, position, and size (default: XK_v).
.RS
.PP
goomwwm -vtile h
.RE
.TP
.B -vuntile
Set an X11 key to do the opposite of vtile.
.RS
.PP
goomwwm -vuntile h
.RE
.TP
.B -warpmode
Control whether the mouse pointer warps to a focused window (default:
never).
This setting can make focusmode \f[B]sloppy\f[] more cooperative when
focus is changed by means other than the mouse.
.RS
.PP
goomwwm -warpmode focus
.PP
Valid settings are:
.TP
.B never
Pointer is never moved (default for -focusmode click).
.RS
.RE
.TP
.B follow
Pointer follows a moved window, but is not moved to a newly focused window.
.RS
.RE
.TP
.B focus
Pointer is warped to a newly focused window, and follows a moved window
(default for -focusmode sloppy[tag]).
.RS
.RE
.RE
.SH OPTIONS (cli mode)
.PP
When run with \f[B]-cli\f[] (command line interface) goomwwm may be used
to dispatch commands to another running instance of goomwwm.
Valid arguments are:
.TP
.B -duration
A time delay in seconds.
Currently used only for \f[B]-notice\f[].
.RS
.PP
goomwwm -cli -notice "Hello World" -duration 5
.RE
.TP
.B -exec
Switch to another window manager in place (without restarting X).
.RS
.PP
goomwwm -cli -exec dwm
.RE
.TP
.B -findstart
Locate a window by class, name, or title.
If not found, execute it.
.RS
.PP
goomwwm -cli -findstart class:xterm
.RE
.TP
.B -notice
Instruct goomwwm to display something via the popup message box.
.RS
.PP
goomwwm -cli -notice "Hello World"
.RE
.TP
.B -quit
Exit goomwwm.
.RS
.PP
goomwwm -cli -quit
.RE
.TP
.B -restart
Restart a running goomwwm instance in place (without restarting X).
Useful for reloading config file or upgrading to a new version.
.RS
.PP
goomwwm -cli -restart
.RE
.TP
.B -rule
Execute a temporary rule on windows in the current tag.
.RS
.PP
goomwwm -cli -rule "xterm large"
.RE
.TP
.B -ruleset
Execute a rule set by name.
.RS
.PP
goomwwm -cli -ruleset alpha
.RE
.SH SEE ALSO
.PP
\f[B]dmenu\f[] (1)
.SH AUTHOR
.PP
Sean Pringle <sean.pringle@gmail.com>
